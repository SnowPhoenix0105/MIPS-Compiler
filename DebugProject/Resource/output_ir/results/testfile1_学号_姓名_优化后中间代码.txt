	aar	G_a_a,	int,	1000
	aar	G_a_seed,	int,	3
	init	19971231
	init	19981013
	init	1000000007
	gvar	G_staticvalue
	init	0
func_beg_myscanf:
	func	int
func_mid_myscanf:
	scanf	#ret,	int
	ret
func_end_myscanf:




func_beg_myprintf:
	func	void
	param	myprintf_n
func_mid_myprintf:
	printf	NIL,	myprintf_n,	int
	ret
func_end_myprintf:




func_beg_set:
	func	int
	param	set_pos
	param	set_d
	aar	set_a_x,	int,	31
func_mid_set:
	set_i	=	#zero	+	10
	set_v	=	#zero	+	0
	t0	=	#zero	+	1
	t2	=	#zero	+	0
	t1	=	#sp	+	t2
	t1[set_a_x]	=	t0
	t7	=	#zero	+	0
	t6	=	#sp	+	t7
	t8	=	t6[set_a_x]
	t3	=	t8	<<	1
	t5	=	#zero	+	4
	t4	=	#sp	+	t5
	t4[set_a_x]	=	t3
	t14	=	#zero	+	4
	t13	=	#sp	+	t14
	t15	=	t13[set_a_x]
	t10	=	t15	<<	1
	t12	=	#zero	+	8
	t11	=	#sp	+	t12
	t11[set_a_x]	=	t10
	t21	=	#zero	+	8
	t20	=	#sp	+	t21
	t22	=	t20[set_a_x]
	t17	=	t22	<<	1
	t19	=	#zero	+	12
	t18	=	#sp	+	t19
	t18[set_a_x]	=	t17
	t28	=	#zero	+	12
	t27	=	#sp	+	t28
	t29	=	t27[set_a_x]
	t24	=	t29	<<	1
	t26	=	#zero	+	16
	t25	=	#sp	+	t26
	t25[set_a_x]	=	t24
	t35	=	#zero	+	16
	t34	=	#sp	+	t35
	t36	=	t34[set_a_x]
	t31	=	t36	<<	1
	t33	=	#zero	+	20
	t32	=	#sp	+	t33
	t32[set_a_x]	=	t31
	t42	=	#zero	+	20
	t41	=	#sp	+	t42
	t43	=	t41[set_a_x]
	t38	=	t43	<<	1
	t40	=	#zero	+	24
	t39	=	#sp	+	t40
	t39[set_a_x]	=	t38
	t49	=	#zero	+	24
	t48	=	#sp	+	t49
	t50	=	t48[set_a_x]
	t45	=	t50	<<	1
	t47	=	#zero	+	28
	t46	=	#sp	+	t47
	t46[set_a_x]	=	t45
	t56	=	#zero	+	28
	t55	=	#sp	+	t56
	t57	=	t55[set_a_x]
	t52	=	t57	<<	1
	t54	=	#zero	+	32
	t53	=	#sp	+	t54
	t53[set_a_x]	=	t52
	t63	=	#zero	+	32
	t62	=	#sp	+	t63
	t64	=	t62[set_a_x]
	t59	=	t64	<<	1
	t61	=	#zero	+	36
	t60	=	#sp	+	t61
	t60[set_a_x]	=	t59
	t70	=	#zero	+	36
	t69	=	#sp	+	t70
	t71	=	t69[set_a_x]
	t66	=	t71	<<	1
	t68	=	#zero	+	40
	t67	=	#sp	+	t68
	t67[set_a_x]	=	t66
	goto	while_mid_0
while_beg_0:
	set_i	=	set_i	+	1
	t79	=	set_i	-	1
	t81	=	t79	<<	2
	t80	=	#sp	+	t81
	t82	=	t80[set_a_x]
	t76	=	t82	<<	1
	t78	=	set_i	<<	2
	t77	=	#sp	+	t78
	t77[set_a_x]	=	t76
while_mid_0:
	t73	=	set_i	<	30
	if t73 != #zero	goto	while_beg_0
while_end_0:
	t84	=	set_pos	/	30
	t85	=	t84	<	1000
	if t85 != #zero	goto	if_mid_0
if_beg_0:
	#ret	=	#zero	+	0
	ret
if_mid_0:
if_end_0:
	t86	=	set_pos	/	30
	t88	=	t86	<<	2
	t87	=	#gp	+	t88
	t89	=	t87[G_a_a]
	t90	=	set_pos	/	30
	t91	=	t90	*	30
	t92	=	set_pos	-	t91
	t94	=	t92	<<	2
	t93	=	#sp	+	t94
	t95	=	t93[set_a_x]
	t96	=	t89	/	t95
	t97	=	set_pos	/	30
	t99	=	t97	<<	2
	t98	=	#gp	+	t99
	t100	=	t98[G_a_a]
	t101	=	set_pos	/	30
	t102	=	t101	*	30
	t103	=	set_pos	-	t102
	t105	=	t103	<<	2
	t104	=	#sp	+	t105
	t106	=	t104[set_a_x]
	t107	=	t100	/	t106
	t254	=	t107	+	1
	t255	=	t107	<	#zero
	if t255 == 0t254	=	t107
	t108	=	t254	>>	1
	t109	=	t108	<<	1
	t110	=	t96	-	t109
	if t110 == set_d	goto	if_mid_1
if_beg_1:
	t111	=	set_pos	/	30
	t113	=	t111	<<	2
	t112	=	#gp	+	t113
	t114	=	t112[G_a_a]
	t115	=	set_pos	/	30
	t116	=	t115	*	30
	t117	=	set_pos	-	t116
	t119	=	t117	<<	2
	t118	=	#sp	+	t119
	t120	=	t118[set_a_x]
	t121	=	t114	/	t120
	t122	=	set_pos	/	30
	t124	=	t122	<<	2
	t123	=	#gp	+	t124
	t125	=	t123[G_a_a]
	t126	=	set_pos	/	30
	t127	=	t126	*	30
	t128	=	set_pos	-	t127
	t130	=	t128	<<	2
	t129	=	#sp	+	t130
	t131	=	t129[set_a_x]
	t132	=	t125	/	t131
	t256	=	t132	+	1
	t257	=	t132	<	#zero
	if t257 == 0t256	=	t132
	t133	=	t256	>>	1
	t134	=	t133	<<	1
	t135	=	t121	-	t134
	t262	=	#zero	+	0
	if t135 != t262	goto	if_mid_2
if_beg_2:
	t263	=	#zero	+	1
	if set_d != t263	goto	if_mid_3
if_beg_3:
	t137	=	set_pos	/	30
	t138	=	t137	*	30
	t139	=	set_pos	-	t138
	t141	=	t139	<<	2
	t140	=	#sp	+	t141
	set_v	=	t140[set_a_x]
if_mid_3:
if_end_3:
if_mid_2:
if_end_2:
	t143	=	set_pos	/	30
	t145	=	t143	<<	2
	t144	=	#gp	+	t145
	t146	=	t144[G_a_a]
	t147	=	set_pos	/	30
	t148	=	t147	*	30
	t149	=	set_pos	-	t148
	t151	=	t149	<<	2
	t150	=	#sp	+	t151
	t152	=	t150[set_a_x]
	t153	=	t146	/	t152
	t154	=	set_pos	/	30
	t156	=	t154	<<	2
	t155	=	#gp	+	t156
	t157	=	t155[G_a_a]
	t158	=	set_pos	/	30
	t159	=	t158	*	30
	t160	=	set_pos	-	t159
	t162	=	t160	<<	2
	t161	=	#sp	+	t162
	t163	=	t161[set_a_x]
	t164	=	t157	/	t163
	t258	=	t164	+	1
	t259	=	t164	<	#zero
	if t259 == 0t258	=	t164
	t165	=	t258	>>	1
	t166	=	t165	<<	1
	t167	=	t153	-	t166
	t264	=	#zero	+	1
	if t167 != t264	goto	if_mid_4
if_beg_4:
	t265	=	#zero	+	0
	if set_d != t265	goto	if_mid_5
if_beg_5:
	t169	=	set_pos	/	30
	t170	=	t169	*	30
	t171	=	set_pos	-	t170
	t173	=	t171	<<	2
	t172	=	#sp	+	t173
	t174	=	t172[set_a_x]
	set_v	=	set_v	-	t174
if_mid_5:
if_end_5:
if_mid_4:
if_end_4:
if_mid_1:
if_end_1:
	t180	=	set_pos	/	30
	t182	=	t180	<<	2
	t181	=	#gp	+	t182
	t183	=	t181[G_a_a]
	t176	=	t183	+	set_v
	t177	=	set_pos	/	30
	t179	=	t177	<<	2
	t178	=	#gp	+	t179
	t178[G_a_a]	=	t176
	#ret	=	#zero	+	0
	ret
func_end_set:




func_beg_rand:
	func	int
func_mid_rand:
	t187	=	#zero	+	0
	t186	=	#gp	+	t187
	t188	=	t186[G_a_seed]
	t189	=	t188	*	G_staticvalue
	t191	=	#zero	+	4
	t190	=	#gp	+	t191
	t192	=	t190[G_a_seed]
	G_staticvalue	=	t189	+	t192
	t196	=	#zero	+	8
	t195	=	#gp	+	t196
	t197	=	t195[G_a_seed]
	t198	=	G_staticvalue	/	t197
	t200	=	#zero	+	8
	t199	=	#gp	+	t200
	t201	=	t199[G_a_seed]
	t202	=	t201	*	t198
	G_staticvalue	=	G_staticvalue	-	t202
	t204	=	G_staticvalue	<	0
	if t204 == #zero	goto	if_mid_6
if_beg_6:
	t207	=	#zero	+	8
	t206	=	#gp	+	t207
	t208	=	t206[G_a_seed]
	G_staticvalue	=	t208	+	G_staticvalue
if_mid_6:
if_end_6:
	#ret	=	G_staticvalue	+	#zero
	ret
func_end_rand:




func_beg_main:
	func	void
func_mid_main:
	main_tmp	=	#zero	+	0
	main_i	=	#zero	+	0
	main_j	=	#zero	+	0
	goto	while_mid_1
while_beg_1:
	t211	=	#zero	+	0
	t213	=	main_j	<<	2
	t212	=	#gp	+	t213
	t212[G_a_a]	=	t211
	main_j	=	main_j	+	1
while_mid_1:
	t210	=	main_j	<	1000
	if t210 != #zero	goto	while_beg_1
while_end_1:
	call	func_beg_myscanf
	main_n	=	#ret	+	#zero
	call	func_beg_myscanf
	G_staticvalue	=	#ret	+	#zero
	goto	while_mid_2
while_beg_2:
	main_n	=	main_n	-	1
	call	func_beg_rand
	main_z	=	#ret	+	#zero
	t226	=	main_z	/	300000
	t227	=	t226	*	300000
	main_x	=	main_z	-	t227
	call	func_beg_rand
	main_z	=	#ret	+	#zero
	t260	=	main_z	+	1
	t261	=	main_z	<	#zero
	if t261 == 0t260	=	main_z
	t232	=	t260	>>	1
	t233	=	t232	<<	1
	main_y	=	main_z	-	t233
	push	main_y
	push	main_x
	call	func_beg_set
	t235	=	#ret	+	#zero
while_mid_2:
	t266	=	#zero	+	0
	t220	=	t266	<	main_n
	if t220 != #zero	goto	while_beg_2
while_end_2:
	goto	while_mid_3
while_beg_3:
	t239	=	main_i	<<	2
	t238	=	#gp	+	t239
	t240	=	t238[G_a_a]
	t242	=	main_i	<<	2
	t241	=	#gp	+	t242
	t243	=	t241[G_a_a]
	t244	=	t243	/	100000
	t245	=	t244	*	100000
	t246	=	t240	-	t245
	main_tmp	=	main_tmp	+	t246
	t249	=	main_tmp	/	100000
	t250	=	t249	*	100000
	main_tmp	=	main_tmp	-	t250
	main_i	=	main_i	+	1
while_mid_3:
	t236	=	main_i	<	1000
	if t236 != #zero	goto	while_beg_3
while_end_3:
	push	main_tmp
	call	func_beg_myprintf
	ret
func_end_main:





